---
- name: Download k3s
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/tmp/{{ item.url | basename }}"
    checksum: "{{ item.checksum | default(omit) }}"
  delegate_to: localhost
  run_once: true
  with_items:
  - { url: "{{ bootstrap_k3s_download_path }}/{{ bootstrap_k3s_version }}/k3s", checksum: "sha256:{{ bootstrap_k3s_download_path }}/{{ bootstrap_k3s_version }}/sha256sum-amd64.txt" }
  - { url: "{{ bootstrap_k3s_download_path }}/{{ bootstrap_k3s_version }}/k3s-airgap-images-amd64.tar.zst", checksum: "sha256:{{ bootstrap_k3s_download_path }}/{{ bootstrap_k3s_version }}/sha256sum-amd64.txt" }
  - { url: "https://get.k3s.io" }

- name: Create dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    recurse: yes
  with_items:
  - /var/lib/rancher/k3s/agent/images

- name: Copy files to remote host
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items:
  - { src: /tmp/k3s, dest: /usr/local/bin/k3s, mode: '+x' }
  - { src: /tmp/k3s_install.sh, dest: /tmp/k3s_install.sh, mode: '+x' }
  - { src: /tmp/k3s-airgap-images-amd64.tar.zst, dest: /var/lib/rancher/k3s/agent/images/k3s-airgap-images-amd64.tar.zst }

- name: Run k3s_install.sh for server
  ansible.builtin.shell: /tmp/k3s_install.sh --docker --disable=traefik,servicelb
  environment:
    INSTALL_K3S_VERSION: "{{ bootstrap_k3s_version }}"
    INSTALL_K3S_SKIP_DOWNLOAD: "true"
    K3S_TOKEN: "{{ bootstrap_k3s_token }}"
    K3S_KUBECONFIG_MODE: "644"
  when: bootstrap_k3s_server_role is defined and bootstrap_k3s_server_role == "master"

- name: Run k3s_install.sh for agent
  ansible.builtin.shell: /tmp/k3s_install.sh --docker
  environment:
    INSTALL_K3S_VERSION: "{{ bootstrap_k3s_version }}"
    INSTALL_K3S_SKIP_DOWNLOAD: "true"
    K3S_TOKEN: "{{ bootstrap_k3s_token }}"
    K3S_URL: "{{ bootstrap_k3s_url }}"
  when: bootstrap_k3s_server_role is not defined or bootstrap_k3s_server_role != "master"
